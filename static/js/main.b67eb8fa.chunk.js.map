{"version":3,"sources":["components/Header.jsx","components/Drumpad2.jsx","drumsetdata.js","components/Drumset2.jsx","components/Main.jsx","components/Footer.jsx","components/App.js","index.js"],"names":["Header","Drumpad","props","className","onClick","toggleActive","pad","id","pads","i","isActive","name","src","imgURL","alt","drumsetdata","key","letter","soundURL","Drumset","useState","map","d","audioObj","Audio","setPads","idToChange","setIdToChange","activePads","setActivePads","padsActive","setPadsActive","useEffect","index","findIndex","temp","some","filter","first","forEach","stopPad","length","playPad","addEventListener","console","log","find","stopAll","pause","currentTime","objAud","play","padId","icon","faPlay","faStop","Main","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b67eb8fa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      {/* <h1> Loop Station </h1> */}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Drumpad(props) {\r\n\r\n  return (\r\n    <div className=\"inline\">\r\n\r\n      <button\r\n        onClick={() => props.toggleActive(props.pad.id)}\r\n        className={props.pads[props.i].isActive ? \"drumpad pressed\" : \"drumpad\"}\r\n      >\r\n        <img\r\n          id={props.pad.name}\r\n          className=\"drumpad-img\"\r\n          src={props.pad.imgURL}\r\n          alt={props.pad.alt}\r\n        />\r\n      </button>\r\n      {/* <h3>{props.pad.name}</h3> */}\r\n    </div>\r\n  );\r\n}\r\n","const drumsetdata = [\r\n  {\r\n    id: \"kick\",\r\n    key: \"kick\",\r\n\r\n    imgURL: \"images/bass-drum.png\",\r\n    alt: \"kick-img\",\r\n    letter: \"B\",\r\n    soundURL: \"sounds/newexp/KICK.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"snare\",\r\n    key: \"snare\",\r\n\r\n    imgURL: \"images/006-drum-1.png\",\r\n    alt: \"snare-img\",\r\n    letter: \"G\",\r\n    soundURL: \"sounds/newexp/SNARE.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"tom1\",\r\n    key: \"tom1\",\r\n\r\n    imgURL: \"images/008-drum-2.png\",\r\n    alt: \"tom1-img\",\r\n    letter: \"S\",\r\n    soundURL: \"sounds/newexp/TOM1.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"tom2\",\r\n    key: \"tom2\",\r\n\r\n    imgURL: \"images/011-drum-3.png\",\r\n    alt: \"tom2-img\",\r\n    letter: \"D\",\r\n    soundURL: \"sounds/newexp/TOM2.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"tom3\",\r\n    key: \"tom3\",\r\n\r\n    imgURL: \"images/005-drum.png\",\r\n    alt: \"tom3-img\",\r\n    letter: \"F\",\r\n    soundURL: \"sounds/newexp/TOM3.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"clap\",\r\n    key: \"clap\",\r\n\r\n    imgURL: \"images/clapping.png\",\r\n    alt: \"clap-img\",\r\n    letter: \"V\",\r\n    soundURL: \"sounds/newexp/CLAP.mp3\",\r\n    isActive: false\r\n  },\r\n\r\n  {\r\n    id: \"closedhihat\",\r\n    key: \"closedhihat\",\r\n\r\n    imgURL: \"images/004-tambourine.png\",\r\n    alt: \"closedhihat-img\",\r\n    letter: \"N\",\r\n    soundURL: \"sounds/newexp/HH.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"cymb\",\r\n    key: \"cymb\",\r\n\r\n    imgURL: \"images/007-cymbal.png\",\r\n    alt: \"crash-img\",\r\n    letter: \"H\",\r\n    soundURL: \"sounds/newexp/CYMB.mp3\",\r\n    isActive: false\r\n  },\r\n  {\r\n    id: \"shaker\",\r\n    key: \"shaker\",\r\n\r\n    imgURL: \"images/003-maracas.png\",\r\n    alt: \"shaker-img\",\r\n    letter: \"M\",\r\n    soundURL: \"sounds/newexp/SHAKER.mp3\",\r\n    isActive: false\r\n  },\r\n];\r\n\r\nexport default drumsetdata;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Drumpad2 from \"./Drumpad2\";\r\nimport drumsetdata from \"../drumsetdata\";\r\nimport { faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Drumset() {\r\n  // data\r\n  const [pads, setPads] = useState(drumsetdata.map(d => { return { ...d, audioObj: new Audio(d.soundURL) } }));\r\n  const [idToChange, setIdToChange] = useState('');\r\n  const [activePads, setActivePads] = useState([]);\r\n  const [padsActive, setPadsActive] = useState(false);\r\n\r\n  // toggle active per pad in pads array \r\n  useEffect(() => {\r\n    const index = pads.findIndex(pad => pad.id === idToChange);\r\n    if (index !== -1) {\r\n      let temp = [...pads];\r\n      temp[index].isActive = !temp[index].isActive;\r\n      setPads(temp);\r\n      setIdToChange('');\r\n    }\r\n  }, [idToChange]);\r\n\r\n\r\n  // after active-toggle, pushes active pad from pads array to activePads array, update padsActive boolean accordingly.\r\n  useEffect(() => {\r\n    pads.some(pad => pad.isActive) ? setPadsActive(true) : setPadsActive(false);\r\n    setActivePads(pads.filter(pad => pad.isActive && pad));\r\n  }, [pads]);\r\n\r\n  // e=for every change in activePads array\r\n  //stopping all non active pads in pads array\r\n  //\r\n  useEffect(() => {\r\n    pads.forEach(pad => (!pad.isActive) && stopPad(pad.audioObj));\r\n\r\n    if (padsActive) {\r\n      let first;\r\n      if (activePads.length === 1) {\r\n        first = activePads[0]\r\n        playPad(first.audioObj) // playing first pad in active pads\r\n        //when ended, play all active pads in pads array\r\n        first.audioObj.addEventListener('ended', () => {\r\n          console.log(\"ended\");\r\n          pads.forEach(pad => {\r\n            if (pad.isActive) {\r\n              playPad(pad.audioObj);\r\n            }\r\n          })\r\n        }, false);\r\n      }\r\n      // console.log(first);\r\n      if (!first?.isActive) {\r\n        pads.find(pad => pad.isActive).audioObj.addEventListener('ended', () => {\r\n          // console.log(\"ended\");\r\n          pads.forEach(pad => {\r\n            if (pad.isActive) {\r\n              playPad(pad.audioObj);\r\n            }\r\n          })\r\n        }, false);\r\n      }\r\n\r\n    } else {\r\n      stopAll();\r\n    }\r\n\r\n  }, [activePads])\r\n\r\n\r\n  const playActive = () => {\r\n    pads.forEach(pad => (!pad.isActive) && stopPad(pad.audioObj));\r\n\r\n    activePads.forEach(pad => {\r\n      if (pad.isActive) {\r\n        // pad.audioObj.loop = true;\r\n        pad.audioObj.play();\r\n        pad.audioObj.addEventListener('ended', () => {\r\n          playPad(pad.audioObj);\r\n\r\n        }, false);\r\n      };\r\n    })\r\n  }\r\n\r\n  const stopAll = () => {\r\n    pads.forEach(pad => {\r\n      pad.audioObj.pause();\r\n      pad.audioObj.currentTime = 0;\r\n    })\r\n  }\r\n\r\n  const stopPad = (objAud) => {\r\n    objAud.pause();\r\n    objAud.currentTime = 0;\r\n\r\n  }\r\n\r\n  const playPad = (objAud) => {\r\n    objAud.play();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"drums\">\r\n        {pads.map((d, i) => (\r\n          <Drumpad2\r\n            i={i}\r\n            pads={[...pads]}\r\n            pad={d}\r\n            key={d.key}\r\n            toggleActive={padId => setIdToChange(padId)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"controller\">\r\n        <div className=\"ctrlBtn\" onClick={playActive} >\r\n          <FontAwesomeIcon className=\"icon\" icon={faPlay} />\r\n          Play\r\n        </div>\r\n        <div className=\"ctrlBtn\" onClick={stopAll}>\r\n          <FontAwesomeIcon className=\"icon\" icon={faStop} />\r\n          Stop\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Drumset2 from \"./Drumset2\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <Drumset2 />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <p>created by Dorran Gavish</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n// import 'font-awesome/css/font-awesome.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}